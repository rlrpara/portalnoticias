name: Validate code
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Begin
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 5.0.x
          
      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          # dotnet tool update --global dotnet-sonarscanner
          # dotnet tool update --global dotnet-coverageconverter
          dotnet tool install --global dotnet-coverageconverter
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          # dotnet tool update dotnet-coverageconverter --tool-path .\.sonar\dotnetcoverage
      - name: Test and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"rlrpara_portalnoticias" /o:"rlrpara" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths="**.coveragexml" /d:sonar.cs.vstest.reportsPaths="**.trx"
          dotnet test "PortalNoticiasProject/PortalNoticiasProject.sln" --collect "Code Coverage" --logger trx --results-directory "TestsResults"
          dotnetcoverage\dotnet-coverageconverter -f "." -p true -r
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"